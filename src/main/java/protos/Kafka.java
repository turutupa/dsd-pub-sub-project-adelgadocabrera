// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/record.proto

package protos;

public final class Kafka {
  private Kafka() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RecordOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Record)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string type = 1;</code>
     */
    java.lang.String getType();
    /**
     * <code>string type = 1;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <code>string topic = 2;</code>
     */
    java.lang.String getTopic();
    /**
     * <code>string topic = 2;</code>
     */
    com.google.protobuf.ByteString
        getTopicBytes();

    /**
     * <code>string key_type = 3;</code>
     */
    java.lang.String getKeyType();
    /**
     * <code>string key_type = 3;</code>
     */
    com.google.protobuf.ByteString
        getKeyTypeBytes();

    /**
     * <code>string value_type = 4;</code>
     */
    java.lang.String getValueType();
    /**
     * <code>string value_type = 4;</code>
     */
    com.google.protobuf.ByteString
        getValueTypeBytes();

    /**
     * <code>bytes key = 5;</code>
     */
    com.google.protobuf.ByteString getKey();

    /**
     * <code>bytes value = 6;</code>
     */
    com.google.protobuf.ByteString getValue();

    /**
     * <code>int64 timestamp = 7;</code>
     */
    long getTimestamp();

    /**
     * <code>int32 offset = 8;</code>
     */
    int getOffset();

    /**
     * <code>repeated .Record records = 9;</code>
     */
    java.util.List<protos.Kafka.Record> 
        getRecordsList();
    /**
     * <code>repeated .Record records = 9;</code>
     */
    protos.Kafka.Record getRecords(int index);
    /**
     * <code>repeated .Record records = 9;</code>
     */
    int getRecordsCount();
    /**
     * <code>repeated .Record records = 9;</code>
     */
    java.util.List<? extends protos.Kafka.RecordOrBuilder> 
        getRecordsOrBuilderList();
    /**
     * <code>repeated .Record records = 9;</code>
     */
    protos.Kafka.RecordOrBuilder getRecordsOrBuilder(
        int index);

    /**
     * <code>int32 nodeId = 10;</code>
     */
    int getNodeId();

    /**
     * <code>.Record.Role role = 11;</code>
     */
    int getRoleValue();
    /**
     * <code>.Record.Role role = 11;</code>
     */
    protos.Kafka.Record.Role getRole();

    /**
     * <code>int32 port = 12;</code>
     */
    int getPort();

    /**
     * <code>int32 recordId = 13;</code>
     */
    int getRecordId();
  }
  /**
   * Protobuf type {@code Record}
   */
  public  static final class Record extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Record)
      RecordOrBuilder {
    // Use Record.newBuilder() to construct.
    private Record(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Record() {
      type_ = "";
      topic_ = "";
      keyType_ = "";
      valueType_ = "";
      key_ = com.google.protobuf.ByteString.EMPTY;
      value_ = com.google.protobuf.ByteString.EMPTY;
      timestamp_ = 0L;
      offset_ = 0;
      records_ = java.util.Collections.emptyList();
      nodeId_ = 0;
      role_ = 0;
      port_ = 0;
      recordId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Record(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              topic_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              keyType_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              valueType_ = s;
              break;
            }
            case 42: {

              key_ = input.readBytes();
              break;
            }
            case 50: {

              value_ = input.readBytes();
              break;
            }
            case 56: {

              timestamp_ = input.readInt64();
              break;
            }
            case 64: {

              offset_ = input.readInt32();
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                records_ = new java.util.ArrayList<protos.Kafka.Record>();
                mutable_bitField0_ |= 0x00000100;
              }
              records_.add(
                  input.readMessage(protos.Kafka.Record.parser(), extensionRegistry));
              break;
            }
            case 80: {

              nodeId_ = input.readInt32();
              break;
            }
            case 88: {
              int rawValue = input.readEnum();

              role_ = rawValue;
              break;
            }
            case 96: {

              port_ = input.readInt32();
              break;
            }
            case 104: {

              recordId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          records_ = java.util.Collections.unmodifiableList(records_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protos.Kafka.internal_static_Record_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protos.Kafka.internal_static_Record_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protos.Kafka.Record.class, protos.Kafka.Record.Builder.class);
    }

    /**
     * Protobuf enum {@code Record.Role}
     */
    public enum Role
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>BROKER = 0;</code>
       */
      BROKER(0),
      /**
       * <code>PRODUCER = 1;</code>
       */
      PRODUCER(1),
      /**
       * <code>CONSUMER = 2;</code>
       */
      CONSUMER(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>BROKER = 0;</code>
       */
      public static final int BROKER_VALUE = 0;
      /**
       * <code>PRODUCER = 1;</code>
       */
      public static final int PRODUCER_VALUE = 1;
      /**
       * <code>CONSUMER = 2;</code>
       */
      public static final int CONSUMER_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Role valueOf(int value) {
        return forNumber(value);
      }

      public static Role forNumber(int value) {
        switch (value) {
          case 0: return BROKER;
          case 1: return PRODUCER;
          case 2: return CONSUMER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Role>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Role> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Role>() {
              public Role findValueByNumber(int number) {
                return Role.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return protos.Kafka.Record.getDescriptor().getEnumTypes().get(0);
      }

      private static final Role[] VALUES = values();

      public static Role valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Role(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Record.Role)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <code>string type = 1;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <code>string type = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOPIC_FIELD_NUMBER = 2;
    private volatile java.lang.Object topic_;
    /**
     * <code>string topic = 2;</code>
     */
    public java.lang.String getTopic() {
      java.lang.Object ref = topic_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        topic_ = s;
        return s;
      }
    }
    /**
     * <code>string topic = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTopicBytes() {
      java.lang.Object ref = topic_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        topic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int KEY_TYPE_FIELD_NUMBER = 3;
    private volatile java.lang.Object keyType_;
    /**
     * <code>string key_type = 3;</code>
     */
    public java.lang.String getKeyType() {
      java.lang.Object ref = keyType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyType_ = s;
        return s;
      }
    }
    /**
     * <code>string key_type = 3;</code>
     */
    public com.google.protobuf.ByteString
        getKeyTypeBytes() {
      java.lang.Object ref = keyType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_TYPE_FIELD_NUMBER = 4;
    private volatile java.lang.Object valueType_;
    /**
     * <code>string value_type = 4;</code>
     */
    public java.lang.String getValueType() {
      java.lang.Object ref = valueType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        valueType_ = s;
        return s;
      }
    }
    /**
     * <code>string value_type = 4;</code>
     */
    public com.google.protobuf.ByteString
        getValueTypeBytes() {
      java.lang.Object ref = valueType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        valueType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int KEY_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString key_;
    /**
     * <code>bytes key = 5;</code>
     */
    public com.google.protobuf.ByteString getKey() {
      return key_;
    }

    public static final int VALUE_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString value_;
    /**
     * <code>bytes value = 6;</code>
     */
    public com.google.protobuf.ByteString getValue() {
      return value_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 7;
    private long timestamp_;
    /**
     * <code>int64 timestamp = 7;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int OFFSET_FIELD_NUMBER = 8;
    private int offset_;
    /**
     * <code>int32 offset = 8;</code>
     */
    public int getOffset() {
      return offset_;
    }

    public static final int RECORDS_FIELD_NUMBER = 9;
    private java.util.List<protos.Kafka.Record> records_;
    /**
     * <code>repeated .Record records = 9;</code>
     */
    public java.util.List<protos.Kafka.Record> getRecordsList() {
      return records_;
    }
    /**
     * <code>repeated .Record records = 9;</code>
     */
    public java.util.List<? extends protos.Kafka.RecordOrBuilder> 
        getRecordsOrBuilderList() {
      return records_;
    }
    /**
     * <code>repeated .Record records = 9;</code>
     */
    public int getRecordsCount() {
      return records_.size();
    }
    /**
     * <code>repeated .Record records = 9;</code>
     */
    public protos.Kafka.Record getRecords(int index) {
      return records_.get(index);
    }
    /**
     * <code>repeated .Record records = 9;</code>
     */
    public protos.Kafka.RecordOrBuilder getRecordsOrBuilder(
        int index) {
      return records_.get(index);
    }

    public static final int NODEID_FIELD_NUMBER = 10;
    private int nodeId_;
    /**
     * <code>int32 nodeId = 10;</code>
     */
    public int getNodeId() {
      return nodeId_;
    }

    public static final int ROLE_FIELD_NUMBER = 11;
    private int role_;
    /**
     * <code>.Record.Role role = 11;</code>
     */
    public int getRoleValue() {
      return role_;
    }
    /**
     * <code>.Record.Role role = 11;</code>
     */
    public protos.Kafka.Record.Role getRole() {
      protos.Kafka.Record.Role result = protos.Kafka.Record.Role.valueOf(role_);
      return result == null ? protos.Kafka.Record.Role.UNRECOGNIZED : result;
    }

    public static final int PORT_FIELD_NUMBER = 12;
    private int port_;
    /**
     * <code>int32 port = 12;</code>
     */
    public int getPort() {
      return port_;
    }

    public static final int RECORDID_FIELD_NUMBER = 13;
    private int recordId_;
    /**
     * <code>int32 recordId = 13;</code>
     */
    public int getRecordId() {
      return recordId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getTopicBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, topic_);
      }
      if (!getKeyTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, keyType_);
      }
      if (!getValueTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, valueType_);
      }
      if (!key_.isEmpty()) {
        output.writeBytes(5, key_);
      }
      if (!value_.isEmpty()) {
        output.writeBytes(6, value_);
      }
      if (timestamp_ != 0L) {
        output.writeInt64(7, timestamp_);
      }
      if (offset_ != 0) {
        output.writeInt32(8, offset_);
      }
      for (int i = 0; i < records_.size(); i++) {
        output.writeMessage(9, records_.get(i));
      }
      if (nodeId_ != 0) {
        output.writeInt32(10, nodeId_);
      }
      if (role_ != protos.Kafka.Record.Role.BROKER.getNumber()) {
        output.writeEnum(11, role_);
      }
      if (port_ != 0) {
        output.writeInt32(12, port_);
      }
      if (recordId_ != 0) {
        output.writeInt32(13, recordId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getTopicBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, topic_);
      }
      if (!getKeyTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, keyType_);
      }
      if (!getValueTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, valueType_);
      }
      if (!key_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, key_);
      }
      if (!value_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, value_);
      }
      if (timestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, timestamp_);
      }
      if (offset_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, offset_);
      }
      for (int i = 0; i < records_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, records_.get(i));
      }
      if (nodeId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, nodeId_);
      }
      if (role_ != protos.Kafka.Record.Role.BROKER.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, role_);
      }
      if (port_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, port_);
      }
      if (recordId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, recordId_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protos.Kafka.Record)) {
        return super.equals(obj);
      }
      protos.Kafka.Record other = (protos.Kafka.Record) obj;

      boolean result = true;
      result = result && getType()
          .equals(other.getType());
      result = result && getTopic()
          .equals(other.getTopic());
      result = result && getKeyType()
          .equals(other.getKeyType());
      result = result && getValueType()
          .equals(other.getValueType());
      result = result && getKey()
          .equals(other.getKey());
      result = result && getValue()
          .equals(other.getValue());
      result = result && (getTimestamp()
          == other.getTimestamp());
      result = result && (getOffset()
          == other.getOffset());
      result = result && getRecordsList()
          .equals(other.getRecordsList());
      result = result && (getNodeId()
          == other.getNodeId());
      result = result && role_ == other.role_;
      result = result && (getPort()
          == other.getPort());
      result = result && (getRecordId()
          == other.getRecordId());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + TOPIC_FIELD_NUMBER;
      hash = (53 * hash) + getTopic().hashCode();
      hash = (37 * hash) + KEY_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getKeyType().hashCode();
      hash = (37 * hash) + VALUE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getValueType().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestamp());
      hash = (37 * hash) + OFFSET_FIELD_NUMBER;
      hash = (53 * hash) + getOffset();
      if (getRecordsCount() > 0) {
        hash = (37 * hash) + RECORDS_FIELD_NUMBER;
        hash = (53 * hash) + getRecordsList().hashCode();
      }
      hash = (37 * hash) + NODEID_FIELD_NUMBER;
      hash = (53 * hash) + getNodeId();
      hash = (37 * hash) + ROLE_FIELD_NUMBER;
      hash = (53 * hash) + role_;
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + getPort();
      hash = (37 * hash) + RECORDID_FIELD_NUMBER;
      hash = (53 * hash) + getRecordId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protos.Kafka.Record parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protos.Kafka.Record parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protos.Kafka.Record parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protos.Kafka.Record parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protos.Kafka.Record parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protos.Kafka.Record parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protos.Kafka.Record parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protos.Kafka.Record parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protos.Kafka.Record parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protos.Kafka.Record parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protos.Kafka.Record prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Record}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Record)
        protos.Kafka.RecordOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protos.Kafka.internal_static_Record_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protos.Kafka.internal_static_Record_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protos.Kafka.Record.class, protos.Kafka.Record.Builder.class);
      }

      // Construct using protos.Kafka.Record.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRecordsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        type_ = "";

        topic_ = "";

        keyType_ = "";

        valueType_ = "";

        key_ = com.google.protobuf.ByteString.EMPTY;

        value_ = com.google.protobuf.ByteString.EMPTY;

        timestamp_ = 0L;

        offset_ = 0;

        if (recordsBuilder_ == null) {
          records_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          recordsBuilder_.clear();
        }
        nodeId_ = 0;

        role_ = 0;

        port_ = 0;

        recordId_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protos.Kafka.internal_static_Record_descriptor;
      }

      public protos.Kafka.Record getDefaultInstanceForType() {
        return protos.Kafka.Record.getDefaultInstance();
      }

      public protos.Kafka.Record build() {
        protos.Kafka.Record result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protos.Kafka.Record buildPartial() {
        protos.Kafka.Record result = new protos.Kafka.Record(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.type_ = type_;
        result.topic_ = topic_;
        result.keyType_ = keyType_;
        result.valueType_ = valueType_;
        result.key_ = key_;
        result.value_ = value_;
        result.timestamp_ = timestamp_;
        result.offset_ = offset_;
        if (recordsBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            records_ = java.util.Collections.unmodifiableList(records_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.records_ = records_;
        } else {
          result.records_ = recordsBuilder_.build();
        }
        result.nodeId_ = nodeId_;
        result.role_ = role_;
        result.port_ = port_;
        result.recordId_ = recordId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protos.Kafka.Record) {
          return mergeFrom((protos.Kafka.Record)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protos.Kafka.Record other) {
        if (other == protos.Kafka.Record.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getTopic().isEmpty()) {
          topic_ = other.topic_;
          onChanged();
        }
        if (!other.getKeyType().isEmpty()) {
          keyType_ = other.keyType_;
          onChanged();
        }
        if (!other.getValueType().isEmpty()) {
          valueType_ = other.valueType_;
          onChanged();
        }
        if (other.getKey() != com.google.protobuf.ByteString.EMPTY) {
          setKey(other.getKey());
        }
        if (other.getValue() != com.google.protobuf.ByteString.EMPTY) {
          setValue(other.getValue());
        }
        if (other.getTimestamp() != 0L) {
          setTimestamp(other.getTimestamp());
        }
        if (other.getOffset() != 0) {
          setOffset(other.getOffset());
        }
        if (recordsBuilder_ == null) {
          if (!other.records_.isEmpty()) {
            if (records_.isEmpty()) {
              records_ = other.records_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureRecordsIsMutable();
              records_.addAll(other.records_);
            }
            onChanged();
          }
        } else {
          if (!other.records_.isEmpty()) {
            if (recordsBuilder_.isEmpty()) {
              recordsBuilder_.dispose();
              recordsBuilder_ = null;
              records_ = other.records_;
              bitField0_ = (bitField0_ & ~0x00000100);
              recordsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRecordsFieldBuilder() : null;
            } else {
              recordsBuilder_.addAllMessages(other.records_);
            }
          }
        }
        if (other.getNodeId() != 0) {
          setNodeId(other.getNodeId());
        }
        if (other.role_ != 0) {
          setRoleValue(other.getRoleValue());
        }
        if (other.getPort() != 0) {
          setPort(other.getPort());
        }
        if (other.getRecordId() != 0) {
          setRecordId(other.getRecordId());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protos.Kafka.Record parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protos.Kafka.Record) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <code>string type = 1;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string type = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string type = 1;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <code>string type = 1;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object topic_ = "";
      /**
       * <code>string topic = 2;</code>
       */
      public java.lang.String getTopic() {
        java.lang.Object ref = topic_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          topic_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string topic = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTopicBytes() {
        java.lang.Object ref = topic_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          topic_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string topic = 2;</code>
       */
      public Builder setTopic(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        topic_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string topic = 2;</code>
       */
      public Builder clearTopic() {
        
        topic_ = getDefaultInstance().getTopic();
        onChanged();
        return this;
      }
      /**
       * <code>string topic = 2;</code>
       */
      public Builder setTopicBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        topic_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object keyType_ = "";
      /**
       * <code>string key_type = 3;</code>
       */
      public java.lang.String getKeyType() {
        java.lang.Object ref = keyType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          keyType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key_type = 3;</code>
       */
      public com.google.protobuf.ByteString
          getKeyTypeBytes() {
        java.lang.Object ref = keyType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          keyType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key_type = 3;</code>
       */
      public Builder setKeyType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        keyType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string key_type = 3;</code>
       */
      public Builder clearKeyType() {
        
        keyType_ = getDefaultInstance().getKeyType();
        onChanged();
        return this;
      }
      /**
       * <code>string key_type = 3;</code>
       */
      public Builder setKeyTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        keyType_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object valueType_ = "";
      /**
       * <code>string value_type = 4;</code>
       */
      public java.lang.String getValueType() {
        java.lang.Object ref = valueType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          valueType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string value_type = 4;</code>
       */
      public com.google.protobuf.ByteString
          getValueTypeBytes() {
        java.lang.Object ref = valueType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          valueType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string value_type = 4;</code>
       */
      public Builder setValueType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        valueType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string value_type = 4;</code>
       */
      public Builder clearValueType() {
        
        valueType_ = getDefaultInstance().getValueType();
        onChanged();
        return this;
      }
      /**
       * <code>string value_type = 4;</code>
       */
      public Builder setValueTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        valueType_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString key_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes key = 5;</code>
       */
      public com.google.protobuf.ByteString getKey() {
        return key_;
      }
      /**
       * <code>bytes key = 5;</code>
       */
      public Builder setKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes key = 5;</code>
       */
      public Builder clearKey() {
        
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes value = 6;</code>
       */
      public com.google.protobuf.ByteString getValue() {
        return value_;
      }
      /**
       * <code>bytes value = 6;</code>
       */
      public Builder setValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes value = 6;</code>
       */
      public Builder clearValue() {
        
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }

      private long timestamp_ ;
      /**
       * <code>int64 timestamp = 7;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>int64 timestamp = 7;</code>
       */
      public Builder setTimestamp(long value) {
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 timestamp = 7;</code>
       */
      public Builder clearTimestamp() {
        
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private int offset_ ;
      /**
       * <code>int32 offset = 8;</code>
       */
      public int getOffset() {
        return offset_;
      }
      /**
       * <code>int32 offset = 8;</code>
       */
      public Builder setOffset(int value) {
        
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 offset = 8;</code>
       */
      public Builder clearOffset() {
        
        offset_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<protos.Kafka.Record> records_ =
        java.util.Collections.emptyList();
      private void ensureRecordsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          records_ = new java.util.ArrayList<protos.Kafka.Record>(records_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protos.Kafka.Record, protos.Kafka.Record.Builder, protos.Kafka.RecordOrBuilder> recordsBuilder_;

      /**
       * <code>repeated .Record records = 9;</code>
       */
      public java.util.List<protos.Kafka.Record> getRecordsList() {
        if (recordsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(records_);
        } else {
          return recordsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Record records = 9;</code>
       */
      public int getRecordsCount() {
        if (recordsBuilder_ == null) {
          return records_.size();
        } else {
          return recordsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Record records = 9;</code>
       */
      public protos.Kafka.Record getRecords(int index) {
        if (recordsBuilder_ == null) {
          return records_.get(index);
        } else {
          return recordsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Record records = 9;</code>
       */
      public Builder setRecords(
          int index, protos.Kafka.Record value) {
        if (recordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordsIsMutable();
          records_.set(index, value);
          onChanged();
        } else {
          recordsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Record records = 9;</code>
       */
      public Builder setRecords(
          int index, protos.Kafka.Record.Builder builderForValue) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          records_.set(index, builderForValue.build());
          onChanged();
        } else {
          recordsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Record records = 9;</code>
       */
      public Builder addRecords(protos.Kafka.Record value) {
        if (recordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordsIsMutable();
          records_.add(value);
          onChanged();
        } else {
          recordsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Record records = 9;</code>
       */
      public Builder addRecords(
          int index, protos.Kafka.Record value) {
        if (recordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordsIsMutable();
          records_.add(index, value);
          onChanged();
        } else {
          recordsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Record records = 9;</code>
       */
      public Builder addRecords(
          protos.Kafka.Record.Builder builderForValue) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          records_.add(builderForValue.build());
          onChanged();
        } else {
          recordsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Record records = 9;</code>
       */
      public Builder addRecords(
          int index, protos.Kafka.Record.Builder builderForValue) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          records_.add(index, builderForValue.build());
          onChanged();
        } else {
          recordsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Record records = 9;</code>
       */
      public Builder addAllRecords(
          java.lang.Iterable<? extends protos.Kafka.Record> values) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, records_);
          onChanged();
        } else {
          recordsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Record records = 9;</code>
       */
      public Builder clearRecords() {
        if (recordsBuilder_ == null) {
          records_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          recordsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Record records = 9;</code>
       */
      public Builder removeRecords(int index) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          records_.remove(index);
          onChanged();
        } else {
          recordsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Record records = 9;</code>
       */
      public protos.Kafka.Record.Builder getRecordsBuilder(
          int index) {
        return getRecordsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Record records = 9;</code>
       */
      public protos.Kafka.RecordOrBuilder getRecordsOrBuilder(
          int index) {
        if (recordsBuilder_ == null) {
          return records_.get(index);  } else {
          return recordsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Record records = 9;</code>
       */
      public java.util.List<? extends protos.Kafka.RecordOrBuilder> 
           getRecordsOrBuilderList() {
        if (recordsBuilder_ != null) {
          return recordsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(records_);
        }
      }
      /**
       * <code>repeated .Record records = 9;</code>
       */
      public protos.Kafka.Record.Builder addRecordsBuilder() {
        return getRecordsFieldBuilder().addBuilder(
            protos.Kafka.Record.getDefaultInstance());
      }
      /**
       * <code>repeated .Record records = 9;</code>
       */
      public protos.Kafka.Record.Builder addRecordsBuilder(
          int index) {
        return getRecordsFieldBuilder().addBuilder(
            index, protos.Kafka.Record.getDefaultInstance());
      }
      /**
       * <code>repeated .Record records = 9;</code>
       */
      public java.util.List<protos.Kafka.Record.Builder> 
           getRecordsBuilderList() {
        return getRecordsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protos.Kafka.Record, protos.Kafka.Record.Builder, protos.Kafka.RecordOrBuilder> 
          getRecordsFieldBuilder() {
        if (recordsBuilder_ == null) {
          recordsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protos.Kafka.Record, protos.Kafka.Record.Builder, protos.Kafka.RecordOrBuilder>(
                  records_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          records_ = null;
        }
        return recordsBuilder_;
      }

      private int nodeId_ ;
      /**
       * <code>int32 nodeId = 10;</code>
       */
      public int getNodeId() {
        return nodeId_;
      }
      /**
       * <code>int32 nodeId = 10;</code>
       */
      public Builder setNodeId(int value) {
        
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 nodeId = 10;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = 0;
        onChanged();
        return this;
      }

      private int role_ = 0;
      /**
       * <code>.Record.Role role = 11;</code>
       */
      public int getRoleValue() {
        return role_;
      }
      /**
       * <code>.Record.Role role = 11;</code>
       */
      public Builder setRoleValue(int value) {
        role_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.Record.Role role = 11;</code>
       */
      public protos.Kafka.Record.Role getRole() {
        protos.Kafka.Record.Role result = protos.Kafka.Record.Role.valueOf(role_);
        return result == null ? protos.Kafka.Record.Role.UNRECOGNIZED : result;
      }
      /**
       * <code>.Record.Role role = 11;</code>
       */
      public Builder setRole(protos.Kafka.Record.Role value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        role_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.Record.Role role = 11;</code>
       */
      public Builder clearRole() {
        
        role_ = 0;
        onChanged();
        return this;
      }

      private int port_ ;
      /**
       * <code>int32 port = 12;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <code>int32 port = 12;</code>
       */
      public Builder setPort(int value) {
        
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 port = 12;</code>
       */
      public Builder clearPort() {
        
        port_ = 0;
        onChanged();
        return this;
      }

      private int recordId_ ;
      /**
       * <code>int32 recordId = 13;</code>
       */
      public int getRecordId() {
        return recordId_;
      }
      /**
       * <code>int32 recordId = 13;</code>
       */
      public Builder setRecordId(int value) {
        
        recordId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 recordId = 13;</code>
       */
      public Builder clearRecordId() {
        
        recordId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Record)
    }

    // @@protoc_insertion_point(class_scope:Record)
    private static final protos.Kafka.Record DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protos.Kafka.Record();
    }

    public static protos.Kafka.Record getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Record>
        PARSER = new com.google.protobuf.AbstractParser<Record>() {
      public Record parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Record(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Record> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Record> getParserForType() {
      return PARSER;
    }

    public protos.Kafka.Record getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Record_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Record_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023protos/record.proto\"\240\002\n\006Record\022\014\n\004type" +
      "\030\001 \001(\t\022\r\n\005topic\030\002 \001(\t\022\020\n\010key_type\030\003 \001(\t\022" +
      "\022\n\nvalue_type\030\004 \001(\t\022\013\n\003key\030\005 \001(\014\022\r\n\005valu" +
      "e\030\006 \001(\014\022\021\n\ttimestamp\030\007 \001(\003\022\016\n\006offset\030\010 \001" +
      "(\005\022\030\n\007records\030\t \003(\0132\007.Record\022\016\n\006nodeId\030\n" +
      " \001(\005\022\032\n\004role\030\013 \001(\0162\014.Record.Role\022\014\n\004port" +
      "\030\014 \001(\005\022\020\n\010recordId\030\r \001(\005\".\n\004Role\022\n\n\006BROK" +
      "ER\020\000\022\014\n\010PRODUCER\020\001\022\014\n\010CONSUMER\020\002B\017\n\006prot" +
      "osB\005Kafkab\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Record_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Record_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Record_descriptor,
        new java.lang.String[] { "Type", "Topic", "KeyType", "ValueType", "Key", "Value", "Timestamp", "Offset", "Records", "NodeId", "Role", "Port", "RecordId", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
